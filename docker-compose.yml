# Copyright 2024 Circle Internet Financial, LTD.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

version: "2.3"

services:
  verity-verifier-build:
    image: verity-verifier-build
    build:
      context: .
      target: build
  verity-verifier:
    image: verity-verifier
    build:
      context: .
    environment:
      DB_HOST: postgres
      PORT: "3000"
      HOST: "http://localhost:3000"
      NODE_ENV: "development"
    env_file:
      - ./packages/verifier/.env
    ports:
      - 3000:3000
    command: "/usr/local/circle/start.sh"
    depends_on:
      postgres:
        condition: service_healthy
  migrations:
    image: verity-verifier-build
    environment:
      DB_HOST: postgres
      MIGRATE_DB_USER: &miguser dba
      MIGRATE_DB_PASSWORD: &migpass "T3ndren!!"
    env_file:
      - ./packages/verifier/.env
    command: "/usr/local/circle/migrate.sh"
    depends_on:
      postgres:
        condition: service_healthy
  test:
    image: verity-verifier-build
    environment:
      DB_HOST: postgres
    env_file:
      - ./packages/verifier/.env
    command: "/usr/local/circle/test.sh"
    depends_on:
      migrations:
        condition: service_started
      postgres:
        condition: service_healthy
  postgres:
    image: "514563129364.dkr.ecr.us-east-1.amazonaws.com/circle-dockerhub/postgres:14-latest"
    environment:
      POSTGRES_PASSWORD: *migpass
      POSTGRES_USER: *miguser
      POSTGRES_DB: postgres
      PGDATA: "/tmp/postgres/data"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 30s
      retries: 5
